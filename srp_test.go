package main

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestSRPStuff(t *testing.T) {
	//username := []byte("test")
	//password := []byte("enter")

	bytes_a := []byte("\x4f\x69\x44\xe5\x40\x0c" +
		"\x4a\x6e\x10\xdd\xef\x6b\x65\xf6\xa6\xd0\xfd\x1b\xba\x10\x4b\x6c" +
		"\x43\xb7\xbc\xec\x81\x06\x59\x00\xe5\xbf\xcb\xfd\xb7\x6d\xf4\xcc" +
		"\xfc\xbb\xd5\xa2\xfd\x0a\x22\x8d\x19\x25\xe8\xbd\x6d\x7f\xe4\xe5" +
		"\x84\x39\x9f\xc6\xe4\x03\x04\x61\x8e\x0a\x30\x1c\x11\x4f\x0b\xb0" +
		"\xc6\xa5\xb5\xe8\xc1\xda\xc3\xb6\x26\x21\xad\x3f\xb1\xb2\xa4\x45" +
		"\x66\xcf\x30\x3b\x0d\x40\xbc\x6a\x83\x39\x73\xd7\x85\xf4\x15\x91" +
		"\xba\x6c\x9b\x5b\x4d\x61\xd7\xd8\xe3\x6a\x04\xf5\xad\x2a\xdc\x9b" +
		"\xb6\x0f\x92\x09\x71\x11\x0c\x28\xb0\xb1\x7c\x26\xee\xae\x16\x98" +
		"\xca\xbc\x99\x0c\xe1\x61\x86\x2c\xe1\xad\xf6\x63\x43\xd2\x6f\x47" +
		"\xf1\x75\xe5\x97\x25\x13\x49\x58\x36\x2a\xa9\xf0\xbb\xc7\xfd\x5b" +
		"\xb3\x13\xcd\x2a\xfa\xcb\xfe\xa1\x1a\x28\x9f\x74\x25\x78\x2b\xa1" +
		"\x6d\xb0\x5e\x17\x9e\x69\xe7\x0f\xf1\xcb\xeb\x37\xbd\x41\x01\x45" +
		"\x92\x03\x87\x50\x47\xb4\x52\x55\x2a\x48\x56\x26\xad\xe8\xf0\xbb" +
		"\x97\xd0\x1d\x49\x0f\xa8\x73\xc1\x8d\x4e\xe1\xf7\x6d\x89\xe3\x9d" +
		"\x2e\x2e\xa0\x5e\x99\xba\x2d\x68\xe9\x29\x6d\xb6\x74\x15\x1a\x6f" +
		"\xe8\x40\x03\x49\x26\x5b\xf8\xac\x20\x01")

	assert.Equal(t, 256, len(bytes_a))

	bytes_sb := []byte("\x84\xae\x87\x50\x25\x13\xee" +
		"\x27\x73\x6b\x4d\x30\xcd\xb4\x06\xac\xaa\x92\x34\x90\x6d\xe2\xf2" +
		"\xb8\x13\xd4\x12\xca\xef\x98\x43\x82\x01\x00\x21\x02\x4c\xc2\xaf" +
		"\x1d\xf7\xb7\x84\xef\x69\x6a\xf8\xba\x14\xfb\x60\x67\xca\x90\x13" +
		"\x73\x81\xf8\x67\x2e\xc8\x80\xc8\x9e\x78\x61\xcd\xc8\x6a\x89\xc9" +
		"\xf3\x65\x6f\x99\xb2\xbb\x20\x9a\x7d\xf9\xc6\xbe\x49\x36\x5d\x5e" +
		"\x5f\x6f\x7c\xc7\x7b\x11\x2c\x6d\x15\x51\x43\x5e\x89\x23\xf1\x08" +
		"\x77\x9c\xb6\x7a\xc2\x38\xf1\xcd\x2e\xf1\xc9\xa5\x72\xac\xbf\x97" +
		"\x4b\x51\xf9\x07\xc6\xa0\x94\x48\x06\xe0\xe6\xb8\x85\x8e\xe0\xf1" +
		"\x13\x4e\xe1\x48\xa0\x42\xfe\x2e\xcb\x6d\x03\xd1\xd4\x98\xa3\x02" +
		"\x1a\xae\x07\xcc\x87\x32\x98\x4c\xb8\x0f\x1b\x51\x69\xfb\x2c\x63" +
		"\xba\xe5\x87\x29\x25\xda\xb2\x98\xa3\xa8\xf4\x08\x7c\xed\x8a\xc3" +
		"\x09\xe3\x52\x0c\x67\x34\xa8\x30\xf9\xd9\x1f\xd4\xfd\x73\xa0\x6e" +
		"\xd4\x41\x10\xbe\x32\x37\x17\x43\x89\xb0\xf1\xcf\xbe\x18\x11\xe0" +
		"\x4c\x45\xc5\x21\x7d\x4a\xbb\xc1\x8d\x44\x8b\x17\xe7\x76\xe8\xa9" +
		"\x4e\x4e\x4c\x0b\x46\xbf\xd8\x6e\x8b\xc5\x17\x0f\x24\x61\x70\xd6" +
		"\xb0\x7f\xf7\xac\xe0\xc4\xea\x30\x02\x81\x19\x0f\x43\x52\x47\xb6" +
		"\x3d\x90\x53\x26\x57\x92\xbd\xb0\xd5\x8d\xac\xf9\x0e\x6c\xa5\xc8" +
		"\x0d\x6f\xaa\xa8\x18\x8f\xac\x75\x87\xac\xf1")

	bytes_s := bytes_sb[0:32]
	bytes_b := bytes_sb[34:]

	assert.Equal(t, 290, len(bytes_sb))
	assert.Equal(t, 32, len(bytes_s))
	assert.Equal(t, 256, len(bytes_b))

}
